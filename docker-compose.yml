version: '3.0'
services:
  app:
    container_name: carservice_app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    links:
      - postgresqldb
#      - kafka
    depends_on:
      - postgresqldb
#      - kafka
    environment:
      KAFKA_SERVER: kafka:9092
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresqldb:5432/carservice
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: none

  postgresqldb:
    container_name: postgres-db
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: carservice
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    restart: always
    volumes:
      - postgresql-data:/var/lib/postgresql/data

  config-server:
    image: carservice_spring_cloud-config-server:latest
    ports:
      - "8888:8888"
    environment:
      - SPRING_CLOUD_CONFIG_SERVER_GIT_URI=https://github.com/volha-dzehtsiarenka/config_spring_cloud

#  zookeeper:
#    image: confluentinc/cp-zookeeper:latest
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - 22182:2181

#  kafka:
#    image: confluentinc/cp-kafka:latest
#    depends_on:
#      - zookeeper
#    ports:
#      - 29092:29092
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

volumes:
  postgresql-data:
  elasticsearch-data-volume:
    driver: local
